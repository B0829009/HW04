{"version":3,"sources":["logo.svg","usergithub.js","App.js","reportWebVitals.js","index.js"],"names":["usergit","UserGithub","props","state","login","username","githubtUrl","avatarUrl","ID","followersnum","Followersurl","followingnum","Followingurl","Gists","email","$","get","this","source","result","console","log","data","setState","Login","name","html_url","avatar_url","id","Url","url","followers","followers_url","following_url","gists_url","src","href","React","Component","ReactDOM","render","document","getElementById","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"2LAAe,I,wDC6EAA,EAzED,WACb,IACSC,EADV,kDAGM,WAAYC,GACX,IAAD,8BACE,cAAMA,IACDC,MACL,CACEC,MAAO,GACPC,SAAU,GACVC,WAAY,GACZC,UAAW,GACXC,GAAI,GACJC,aAAc,GACdC,aAAc,GACdC,aAAc,GACdC,aAAc,GACdC,MAAO,GACPC,MAAO,IAdX,EAJN,qDAqBM,WACC,IAAD,OACEC,IAAEC,IAAIC,KAAKf,MAAMgB,QAAQ,SAACC,GAExBC,QAAQC,IAAIF,GACZ,IAAMG,EAAOH,EACTG,GAEF,EAAKC,SAAS,CACZC,MAAOF,EAAKlB,MACZC,SAAUiB,EAAKG,KACfnB,WAAYgB,EAAKI,SACjBnB,UAAWe,EAAKK,WAChBnB,GAAIc,EAAKM,GACTC,IAAKP,EAAKQ,IACVrB,aAAca,EAAKS,UACnBrB,aAAcY,EAAKU,cACnBrB,aAAcW,EAAKX,aACnBC,aAAcU,EAAKW,cACnBpB,MAAOS,EAAKY,UACZpB,MAAOQ,EAAKR,aAzC1B,oBA+CM,WAEE,OACE,gCACE,6BAAKG,KAAKd,MAAMC,QAChB,6BAAKa,KAAKd,MAAME,WAChB,qBAAK8B,IAAKlB,KAAKd,MAAMI,YACrB,mBAAG6B,KAAMnB,KAAKd,MAAMG,WAApB,yBACA,6BAAKW,KAAKd,MAAMK,KAChB,6BAAKS,KAAKR,eACV,mBAAG2B,KAAMnB,KAAKd,MAAMO,aAApB,uBACA,6BAAKO,KAAKN,eACV,mBAAGyB,KAAMnB,KAAKd,MAAMS,aAApB,uBACA,sCACA,mBAAGwB,KAAMnB,KAAKd,MAAMU,MAApB,mBACA,6BAAKI,KAAKH,eA9DtB,GAC6BuB,IAAMC,WAmE/BC,IAASC,OAAO,cAACvC,EAAD,CAAYiB,OAAO,0CAA4CuB,SAASC,eAAe,UC3D5FC,MAVf,WAEE,OACA,qBAAKC,UAAU,MAAf,SACE,8BACI5C,SCGO6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdP,IAASC,OACP,cAAC,IAAMc,WAAP,UACE,cAAC,EAAD,MAEFb,SAASC,eAAe,SAM1BG,M","file":"static/js/main.1cf7ca9b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport $ from 'jquery';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst usergit=()=>\r\n{\r\n    class UserGithub extends React.Component \r\n    {     \r\n      constructor(props) \r\n      {         \r\n        super(props);         \r\n        this.state = \r\n        {           \r\n          login: '',\r\n          username: '',           \r\n          githubtUrl: '',           \r\n          avatarUrl: '',\r\n          ID: '',\r\n          followersnum: '',\r\n          Followersurl: '',\r\n          followingnum: '',\r\n          Followingurl: '',\r\n          Gists: '',  \r\n          email: '',      \r\n        }     \r\n      }     \r\n      componentDidMount() \r\n      {         \r\n        $.get(this.props.source, (result) => \r\n        {             \r\n          console.log(result);             \r\n          const data = result;             \r\n          if (data) \r\n          {               \r\n            this.setState({                     \r\n              Login: data.login,\r\n              username: data.name,                     \r\n              githubtUrl: data.html_url,                     \r\n              avatarUrl: data.avatar_url ,\r\n              ID: data.id,\r\n              Url: data.url,\r\n              followersnum: data.followers,\r\n              Followersurl: data.followers_url,\r\n              followingnum: data.followingnum,\r\n              Followingurl: data.following_url,\r\n              Gists: data.gists_url,\r\n              email: data.email, \r\n            });             \r\n          }         \r\n        });     \r\n      }     \r\n      \r\n      render() \r\n      {         \r\n        return (           \r\n          <div>             \r\n            <h3>{this.state.login}</h3>\r\n            <h3>{this.state.username}</h3>             \r\n            <img src={this.state.avatarUrl} />             \r\n            <a href={this.state.githubtUrl}>Github Link</a>\r\n            <h3>{this.state.ID}</h3>\r\n            <h3>{this.followersnum}</h3>\r\n            <a href={this.state.Followersurl}>Followers</a>\r\n            <h3>{this.followingnum}</h3>\r\n            <a href={this.state.Followingurl}>Following</a>\r\n            <h3>    </h3>\r\n            <a href={this.state.Gists}>Gists</a>\r\n            <h3>{this.email}</h3>           \r\n          </div>         \r\n        );     \r\n      } \r\n    } \r\n    \r\n    ReactDOM.render(<UserGithub source=\"https://api.github.com/users/B0829009\" />, document.getElementById('root'));\r\n\r\n}\r\n    \r\nexport default usergit;\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport usergit from './usergithub';\n\nfunction App() \n{\n  return (\n  <div className=\"App\">\n    <div>\n      { usergit() }\n    </div>\n  </div>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}